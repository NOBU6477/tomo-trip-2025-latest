            if (bookmarkedGuides.length === 0) {
                bookmarksList.innerHTML = `
                    <div class="col-12 text-center py-5">
                        <i class="bi bi-bookmark text-muted" style="font-size: 3rem;"></i>
                        <p class="text-muted mt-3">保存されたガイドはありません</p>
                    </div>
                `;
                return;
            }
            
            const allGuides = loadAllGuides();
            bookmarksList.innerHTML = bookmarkedGuides.map(guideId => {
                const guide = allGuides.find(g => g.id == guideId);
                if (!guide) return '';
                
                return `
                    <div class="col-md-6 mb-3">
                        <div class="card h-100">
                            <div class="row g-0">
                                <div class="col-4">
                                    <img src="${guide.image}" class="img-fluid rounded-start h-100" style="object-fit: cover;" alt="${guide.name}">
                                </div>
                                <div class="col-8">
                                    <div class="card-body p-3">
                                        <h6 class="card-title mb-1">${guide.name}</h6>
                                        <p class="card-text small text-muted mb-2">${locationNames[guide.location] || guide.location}</p>
                                        <p class="card-text"><strong>¥${(guide.price || 0).toLocaleString()}</strong></p>
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-outline-primary btn-sm" >詳細</button>
                                            <button class="btn btn-outline-danger btn-sm" >削除</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        function loadComparisonList() {
            const comparisonGuides = JSON.parse(localStorage.getItem('comparisonGuides') || '[]');
            const comparisonList = document.getElementById('comparisonList');
            
            if (comparisonGuides.length === 0) {
                comparisonList.innerHTML = `
                    <div class="col-12 text-center py-5">
                        <i class="bi bi-graph-up text-muted" style="font-size: 3rem;"></i>
                        <p class="text-muted mt-3">比較中のガイドはありません</p>
                    </div>
                `;
                return;
            }
            
            const allGuides = loadAllGuides();
            comparisonList.innerHTML = comparisonGuides.map(guideId => {
                const guide = allGuides.find(g => g.id == guideId);
                if (!guide) return '';
                
                return `
                    <div class="col-md-4 mb-3">
                        <div class="card h-100 border-success">
                            <img src="${guide.image}" class="card-img-top" style="height: 120px; object-fit: cover;" alt="${guide.name}">
                            <div class="card-body p-3 d-flex flex-column">
                                <h6 class="card-title mb-1">${guide.name}</h6>
                                <p class="card-text small text-muted mb-1">${locationNames[guide.location] || guide.location}</p>
                                <p class="card-text small mb-2"><span class="text-warning">★</span> ${guide.rating}</p>
                                <p class="card-text mb-3"><strong>¥${(guide.price || 0).toLocaleString()}</strong></p>
                                <div class="mt-auto">
                                    <div class="d-grid gap-2">
                                        <button class="btn btn-outline-primary btn-sm" >
                                            <i class="bi bi-info-circle me-1"></i>詳細
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm" >
                                            <i class="bi bi-x me-1"></i>比較から除外
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        function loadBookingsList() {
            const userBookings = JSON.parse(localStorage.getItem('userBookings') || '[]');
            const bookingsList = document.getElementById('bookingsList');
            
            if (userBookings.length === 0) {
                bookingsList.innerHTML = `
                    <div class="text-center py-5">
                        <i class="bi bi-calendar3 text-muted" style="font-size: 3rem;"></i>
                        <p class="text-muted mt-3">予約履歴はありません</p>
                    </div>
                `;
                return;
            }
            
            // Sort bookings by date (newest first)
            const sortedBookings = userBookings.sort((a, b) => new Date(b.bookingDate) - new Date(a.bookingDate));
            
            bookingsList.innerHTML = sortedBookings.map(booking => {
                const statusBadge = {
                    'pending': '<span class="badge bg-warning">予約中</span>',
                    'confirmed': '<span class="badge bg-success">確定</span>',
                    'completed': '<span class="badge bg-info">完了</span>',
                    'cancelled': '<span class="badge bg-danger">キャンセル</span>'
                };
                
                return `
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    <img src="${booking.guideImage}" class="img-fluid rounded-circle" style="width: 60px; height: 60px; object-fit: cover;" alt="${booking.guideName}">
                                </div>
                                <div class="col-md-6">
                                    <h6 class="mb-1">${booking.guideName}</h6>
                                    <p class="mb-1 text-muted small">予約ID: #${booking.id}</p>
                                    <p class="mb-0 small">日時: ${booking.date} ${booking.time} (${booking.duration}時間)</p>
                                </div>
                                <div class="col-md-2 text-center">
                                    <strong>${booking.totalPrice}</strong>
                                </div>
                                <div class="col-md-2 text-center">
                                    ${statusBadge[booking.status] || statusBadge['pending']}
                                    <div class="mt-2">
                                        <button class="btn btn-outline-primary btn-sm" >詳細</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        function loadSettingsData() {
            // Load saved language preference
            const savedLang = localStorage.getItem('preferredLanguage') || 'ja';
            document.getElementById('defaultLanguageSetting').value = savedLang;
            
            // Load notification setting
            const notificationsEnabled = localStorage.getItem('notificationsEnabled') !== 'false';
            document.getElementById('notificationsEnabled').checked = notificationsEnabled;
        }
        
        // Management functions
        function removeBookmark(guideId) {
            const bookmarkedGuides = JSON.parse(localStorage.getItem('bookmarkedGuides') || '[]');
            const updatedBookmarks = bookmarkedGuides.filter(id => id != guideId);
            localStorage.setItem('bookmarkedGuides', JSON.stringify(updatedBookmarks));
            loadBookmarksList();
            
            // Update bookmark buttons throughout the page
            updateBookmarkButtons();
            console.log('Removed bookmark for guide:', guideId);
        }
        
        function removeFromComparison(guideId) {
            const comparisonGuides = JSON.parse(localStorage.getItem('comparisonGuides') || '[]');
            const updatedComparison = comparisonGuides.filter(id => id != guideId);
            localStorage.setItem('comparisonGuides', JSON.stringify(updatedComparison));
            loadComparisonList();
            
            // Update comparison buttons throughout the page
            updateComparisonButtons();
            console.log('Removed from comparison:', guideId);
        }
        
        function viewBookingDetails(bookingId) {
            window.location.href = `booking-confirmation.html?id=${bookingId}`;
        }
        
        // Show guide detail modal from management center
        function showGuideDetailModal(guideId) {
            console.log('Opening guide detail modal for guide:', guideId);
            // Use existing viewGuideDetail function if available
            if (window.viewGuideDetail) {
                const fakeEvent = { preventDefault: () => {}, stopPropagation: () => {} };
                window.viewGuideDetail(guideId, fakeEvent);
            } else {
                // Fallback: redirect to main page with guide detail
                alert('ガイド詳細を表示するため、メインページに移動します。');
                window.location.href = `/?guideId=${guideId}`;
            }
        }
        
        // Clear functions
        document.addEventListener('DOMContentLoaded', function() {
            // Clear bookmarks
            document.getElementById('clearBookmarksBtn').addEventListener('click', function() {
                if (confirm('すべてのブックマークを削除しますか？')) {
                    localStorage.removeItem('bookmarkedGuides');
                    loadBookmarksList();
                    
                    // Update all bookmark buttons throughout the page
                    updateBookmarkButtons();
                }
            });
            
            // Clear comparison
            document.getElementById('clearComparisonBtn').addEventListener('click', function() {
                if (confirm('すべての比較リストを削除しますか？')) {
                    localStorage.removeItem('comparisonGuides');
                    loadComparisonList();
                    
                    // Update all comparison buttons throughout the page
                    updateComparisonButtons();
                }
            });
            
            // Clear bookings
            document.getElementById('clearBookingsBtn').addEventListener('click', function() {
                if (confirm('すべての予約履歴を削除しますか？この操作は取り消せません。')) {
                    localStorage.removeItem('userBookings');
                    loadBookingsList();
                }
            });
            
            // Clear all data
            document.getElementById('clearAllDataBtn').addEventListener('click', function() {
                if (confirm('すべてのデータを削除しますか？この操作は取り消せません。')) {
                    if (confirm('本当にすべてのデータ（ブックマーク、比較リスト、予約履歴、設定）を削除しますか？')) {
                        localStorage.clear();
                        alert('すべてのデータが削除されました。ページをリロードします。');
                        window.location.reload();
                    }
                }
            });
            
            // Export data
            document.getElementById('exportDataBtn').addEventListener('click', function() {
                const userData = {
                    bookmarks: JSON.parse(localStorage.getItem('bookmarkedGuides') || '[]'),
                    comparison: JSON.parse(localStorage.getItem('comparisonGuides') || '[]'),
                    bookings: JSON.parse(localStorage.getItem('userBookings') || '[]'),
                    touristData: JSON.parse(localStorage.getItem('touristRegistrationData') || 'null'),
                    settings: {
                        language: localStorage.getItem('preferredLanguage') || 'ja',
                        notifications: localStorage.getItem('notificationsEnabled') !== 'false'
                    },
                    exportDate: new Date().toISOString()
                };
                
                const dataBlob = new Blob([JSON.stringify(userData, null, 2)], { type: 'application/json' });
                const url = URL.createObjectURL(dataBlob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `TomoTrip_data_${new Date().toISOString().split('T')[0]}.json`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            });
            
            // Data stats
            document.getElementById('dataStatsBtn').addEventListener('click', function() {
                const stats = {
                    bookmarks: JSON.parse(localStorage.getItem('bookmarkedGuides') || '[]').length,
                    comparison: JSON.parse(localStorage.getItem('comparisonGuides') || '[]').length,
                    bookings: JSON.parse(localStorage.getItem('userBookings') || '[]').length,
                    registeredGuides: JSON.parse(localStorage.getItem('registeredGuides') || '[]').length
                };
                
                let storageUsed = 0;
                for (let key in localStorage) {
                    if (localStorage.hasOwnProperty(key)) {
                        storageUsed += localStorage[key].length;
                    }
                }
                
                alert(`ストレージ使用量統計:
・ブックマーク: ${stats.bookmarks}件
・比較リスト: ${stats.comparison}件
・予約履歴: ${stats.bookings}件
・登録ガイド: ${stats.registeredGuides}件
・使用容量: ${(storageUsed / 1024).toFixed(1)} KB`);
            });
            
            // Save settings
            document.getElementById('defaultLanguageSetting').addEventListener('change', function() {
                localStorage.setItem('preferredLanguage', this.value);
            });
            
            document.getElementById('notificationsEnabled').addEventListener('change', function() {
                localStorage.setItem('notificationsEnabled', this.checked);
            });
        });

        // Footer Functions
        function showAbout() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = '会社概要';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>TomoTripについて</h6>
                <p>TomoTripは、日本全国の地域専門ガイドと観光客をつなぐ革新的なプラットフォームです。</p>
                <h6>私たちのミッション</h6>
                <ul>
                    <li>地域の魅力を最大限に引き出す専門ガイドの発掘と育成</li>
                    <li>観光客に安全で充実した旅行体験の提供</li>
                    <li>地域経済の活性化と文化交流の促進</li>
                    <li>持続可能な観光業界の発展への貢献</li>
                </ul>
                <h6>サービス開始</h6>
                <p>2025年より全国47都道府県でサービス展開中</p>
            `;
            modal.show();
        }

        function showTerms() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = '利用規約';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>第1条 サービス概要</h6>
                <p>本サービスは、ガイドと観光客のマッチングプラットフォームです。</p>
                <h6>第2条 利用者の責任</h6>
                <ul>
                    <li>正確な情報の登録</li>
                    <li>他の利用者への配慮</li>
                    <li>法令の遵守</li>
                </ul>
                <h6>第3条 禁止事項</h6>
                <ul>
                    <li>虚偽の情報提供</li>
                    <li>営業妨害行為</li>
                    <li>第三者への迷惑行為</li>
                </ul>
                <p class="text-muted small">最終更新: 2025年1月1日</p>
            `;
            modal.show();
        }

        function showPrivacy() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = 'プライバシーポリシー';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>個人情報の取り扱いについて</h6>
                <p>TomoTripは、お客様の個人情報を以下の目的で利用いたします：</p>
                <ul>
                    <li>サービスの提供・運営</li>
                    <li>お客様サポート</li>
                    <li>安全性の確保</li>
                    <li>サービス改善のための分析</li>
                </ul>
                <h6>第三者への提供</h6>
                <p>法令に基づく場合を除き、お客様の同意なく第三者に提供することはありません。</p>
                <h6>お問い合わせ</h6>
                <p>個人情報に関するお問い合わせ: privacy@tomotrip.com</p>
            `;
            modal.show();
        }

        function showFAQ() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = 'よくある質問';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="accordion" id="faqAccordion">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="faq1">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse1">
                                ガイドの登録は無料ですか？
                            </button>
                        </h2>
                        <div id="faqCollapse1" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                はい、ガイド登録は完全無料です。手数料は予約成立時のみ20%です。
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="faq2">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse2">
                                キャンセル料はいつから発生しますか？
                            </button>
                        </h2>
                        <div id="faqCollapse2" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                予約の7日前まで：無料<br>
                                3-6日前：50%<br>
                                2日前以降：100%
                            </div>
                        </div>
                    </div>
                </div>
            `;
            modal.show();
        }

        function showSafety() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = '安全について';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>安全対策</h6>
                <ul>
                    <li>全ガイドの身元確認実施</li>
                    <li>24時間緊急サポート体制</li>
                    <li>GPS位置情報共有機能</li>
                    <li>ガイド評価システム</li>
                </ul>
                <h6>保険について</h6>
                <p>全てのツアーに旅行傷害保険が適用されます。</p>
                <h6>緊急連絡先</h6>
                <p>24時間対応: 080-1234-5678</p>
            `;
            modal.show();
        }

        function showCancellation() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = 'キャンセル規定';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>キャンセル料金</h6>
                <table class="table table-sm">
                    <tr><td>予約の7日前まで</td><td>無料</td></tr>
                    <tr><td>3-6日前</td><td>料金の50%</td></tr>
                    <tr><td>前日・当日</td><td>料金の100%</td></tr>
                </table>
                <h6>天候による中止</h6>
                <p>悪天候による中止の場合、全額返金いたします。</p>
                <h6>返金方法</h6>
                <p>クレジットカード決済の場合、5-7営業日で返金されます。</p>
            `;
            modal.show();
        }

        function showCookies() {
            const modal = new bootstrap.Modal(document.getElementById('footerModal') || createFooterModal());
            document.getElementById('footerModalTitle').textContent = 'Cookie規定';
            document.getElementById('footerModalBody').innerHTML = `
                <h6>Cookieの使用目的</h6>
                <ul>
                    <li>ユーザー設定の保存</li>
                    <li>ログイン状態の維持</li>
                    <li>サイト利用状況の分析</li>
                    <li>パーソナライズされた体験の提供</li>
                </ul>
                <h6>Cookie設定の変更</h6>
                <p>ブラウザ設定からCookieを無効にできますが、一部機能が制限される場合があります。</p>
            `;
            modal.show();
        }

        function createFooterModal() {
            // Remove existing modal if present
            const existingModal = document.getElementById('footerModal');
            if (existingModal) {
                existingModal.remove();
            }
            
            const modalHTML = `
                <div class="modal fade" id="footerModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content" style="border-radius: 15px;">
                            <div class="modal-header border-0" style="background: linear-gradient(135deg, #4ecdc4, #44a08d); color: white; border-radius: 15px 15px 0 0;">
                                <h5 class="modal-title fw-bold" id="footerModalTitle"></h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body p-4" id="footerModalBody" style="max-height: 70vh; overflow-y: auto;"></div>
                            <div class="modal-footer border-0">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: 25px;">閉じる</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            document.body.insertAdjacentHTML('beforeend', modalHTML);
            return document.getElementById('footerModal');
        }
        
        // Footer link functions
        function scrollToGuides() {
            const guidesContainer = document.getElementById('guides-container') || document.querySelector('.guides-section');
            if (guidesContainer) {
                guidesContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
            } else {
                // If no guides section, scroll to the main content area
                window.scrollTo({ top: 800, behavior: 'smooth' });
            }
        }
        
        function showGuideRegistrationModal() {
            // Use existing registration modal but pre-select guide type
            const existingModal = document.getElementById('registrationModal');
            if (existingModal) {
                const modal = new bootstrap.Modal(existingModal);
                modal.show();
                
                // Auto-select guide registration after modal opens
                setTimeout(() => {
                    const guideCard = document.getElementById('guideCard');
                    if (guideCard) {
                        guideCard.click();
                    }
                }, 500);
            }
        }
        
        function showTouristRegistrationModal() {
            // Use existing registration modal but pre-select tourist type
            const existingModal = document.getElementById('registrationModal');
            if (existingModal) {
                const modal = new bootstrap.Modal(existingModal);
                modal.show();
                
                // Auto-select tourist registration after modal opens
                setTimeout(() => {
                    const touristCard = document.getElementById('touristCard');
                    if (touristCard) {
                        touristCard.click();
                    }
                }, 500);
            }
        }
        
        function showHelp() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = 'ヘルプセンター';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="row g-4">
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3"><i class="bi bi-question-circle me-2 text-primary"></i>よくある質問</h6>
                        <div class="list-group list-group-flush">
                            <a href="#" class="list-group-item list-group-item-action border-0" >
                                <i class="bi bi-chevron-right me-2"></i>ガイド予約について
                            </a>
                            <a href="#" class="list-group-item list-group-item-action border-0" >
                                <i class="bi bi-chevron-right me-2"></i>キャンセル規定
                            </a>
                            <a href="#" class="list-group-item list-group-item-action border-0" >
                                <i class="bi bi-chevron-right me-2"></i>安全について
                            </a>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3"><i class="bi bi-headset me-2 text-success"></i>サポート</h6>
                        <div class="mb-3">
                            <p class="mb-2"><i class="bi bi-envelope me-2"></i><a href="mailto:support@tomotrip.com">support@tomotrip.com</a></p>
                            <p class="mb-2"><i class="bi bi-telephone me-2"></i><a href="tel:03-1234-5678">03-1234-5678</a></p>
                            <p class="mb-2"><i class="bi bi-chat-dots me-2"></i><a href="chat.html">チャットサポート</a></p>
                        </div>
                        <div class="alert alert-info">
                            <small><i class="bi bi-info-circle me-2"></i>緊急時は24時間サポート: <a href="tel:080-9999-8888">080-9999-8888</a></small>
                        </div>
                    </div>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showCompliance() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = '法的遵守';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="mb-4">
                    <h6 class="fw-bold mb-3">コンプライアンス体制</h6>
                    <p>TomoTripは、以下の法規制を遵守し、適切な事業運営を行っています。</p>
                </div>
                
                <div class="row g-4">
                    <div class="col-md-6">
                        <h6 class="fw-bold text-primary">旅行業法遵守</h6>
                        <ul class="list-unstyled">
                            <li><i class="bi bi-check-circle text-success me-2"></i>第二種旅行業者登録済み</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>営業保証金供託済み</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>旅行業務取扱管理者配置</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold text-primary">個人情報保護</h6>
                        <ul class="list-unstyled">
                            <li><i class="bi bi-check-circle text-success me-2"></i>プライバシーマーク取得</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>GDPR対応済み</li>
                            <li><i class="bi bi-check-circle text-success me-2"></i>データ暗号化実装</li>
                        </ul>
                    </div>
                </div>
                
                <div class="mt-4">
                    <h6 class="fw-bold text-primary">資格・許可</h6>
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <tbody>
                                <tr>
                                    <td><strong>旅行業登録番号</strong></td>
                                    <td>第2-1234号</td>
                                </tr>
                                <tr>
                                    <td><strong>所属団体</strong></td>
                                    <td>一般社団法人日本旅行業協会（JATA）</td>
                                </tr>
                                <tr>
                                    <td><strong>旅行業務取扱管理者</strong></td>
                                    <td>田中太郎（総合旅行業務取扱管理者）</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        // More footer functions
        function showFAQ() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = 'よくある質問';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="accordion" id="faqAccordion">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faq1">
                                ガイドを予約するにはどうすればよいですか？
                            </button>
                        </h2>
                        <div id="faq1" class="accordion-collapse collapse show" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                <p>1. 観光客として登録 → 2. ガイドを検索・選択 → 3. 詳細を確認 → 4. 予約・決済の流れです。</p>
                                <p>ガイド詳細の確認には観光客登録が必要です。安全な取引のための身元確認となります。</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq2">
                                料金にはどのような費用が含まれますか？
                            </button>
                        </h2>
                        <div id="faq2" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                <p><strong>含まれるもの：</strong>ガイド料金、基本的な案内サービス</p>
                                <p><strong>含まれないもの：</strong>交通費、入場料、食事代、お土産代</p>
                                <p>※クレジットカード決済の場合、3.6%の決済手数料が追加されます</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq3">
                                ガイドとして登録するには？
                            </button>
                        </h2>
                        <div id="faq3" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                <p>1. ガイド登録フォームに必要事項を入力</p>
                                <p>2. 身分証明書のアップロード</p>
                                <p>3. 審査（通常2-3営業日）</p>
                                <p>4. 承認後、ガイド活動開始可能</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showSafety() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = '安全について';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="row g-4">
                    <div class="col-12">
                        <div class="alert alert-success">
                            <i class="bi bi-shield-check me-2"></i>
                            <strong>TomoTripの安全管理システム</strong>
                        </div>
                    </div>
                </div>
                
                <div class="row g-4">
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">ガイドの安全管理</h6>
                        <ul class="list-unstyled">
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>身元確認・審査制度</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>評価・レビューシステム</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>24時間緊急サポート</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>保険加入義務</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">観光客の安全管理</h6>
                        <ul class="list-unstyled">
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>本人確認済みガイドのみ</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>リアルタイム位置共有</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>緊急連絡システム</li>
                            <li class="mb-2"><i class="bi bi-check-circle text-success me-2"></i>トラブル時の仲裁サービス</li>
                        </ul>
                    </div>
                </div>
                
                <div class="mt-4">
                    <div class="card border-warning">
                        <div class="card-body">
                            <h6 class="card-title text-warning"><i class="bi bi-exclamation-triangle me-2"></i>緊急時の対応</h6>
                            <p class="card-text mb-0">緊急時は直ちに <strong>080-9999-8888</strong> にお電話ください。24時間対応でサポートいたします。</p>
                        </div>
                    </div>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showCancellation() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = 'キャンセル規定';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="mb-4">
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        キャンセル料は予約時刻からの時間により決定されます
                    </div>
                </div>
                
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>キャンセル時期</th>
                                <th>キャンセル料</th>
                                <th>返金額</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>7日前まで</td>
                                <td class="text-success">0%</td>
                                <td class="text-success">100%返金</td>
                            </tr>
                            <tr>
                                <td>3-6日前</td>
                                <td class="text-warning">30%</td>
                                <td class="text-warning">70%返金</td>
                            </tr>
                            <tr>
                                <td>1-2日前</td>
                                <td class="text-danger">50%</td>
                                <td class="text-danger">50%返金</td>
                            </tr>
                            <tr>
                                <td>当日</td>
                                <td class="text-danger">100%</td>
                                <td class="text-danger">返金なし</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <div class="row g-4 mt-3">
                    <div class="col-md-6">
                        <h6 class="fw-bold">免責事項</h6>
                        <ul class="list-unstyled small">
                            <li>• 天候による中止：全額返金</li>
                            <li>• ガイド都合の中止：全額返金</li>
                            <li>• 交通機関遅延：個別対応</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold">返金方法</h6>
                        <ul class="list-unstyled small">
                            <li>• クレジットカード：5-7営業日</li>
                            <li>• デビットカード：3-5営業日</li>
                            <li>• 銀行振込：3営業日以内</li>
                        </ul>
                    </div>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showAbout() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = '会社概要';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="row g-4">
                    <div class="col-12">
                        <div class="text-center mb-4">
                            <img src="TomoTripロゴ_1752342509960.png" alt="TomoTrip" style="height: 60px;" class="mb-3">
                            <h5 class="fw-bold">株式会社TomoTrip</h5>
                            <p class="text-muted">地域と旅行者をつなぐ、新しいガイドマッチングプラットフォーム</p>
                        </div>
                    </div>
                </div>
                
                <div class="row g-4">
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">会社情報</h6>
                        <table class="table table-sm">
                            <tbody>
                                <tr><td><strong>会社名</strong></td><td>株式会社TomoTrip</td></tr>
                                <tr><td><strong>設立</strong></td><td>2023年4月1日</td></tr>
                                <tr><td><strong>代表取締役</strong></td><td>山田太郎</td></tr>
                                <tr><td><strong>資本金</strong></td><td>1億円</td></tr>
                                <tr><td><strong>従業員数</strong></td><td>25名</td></tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">所在地・連絡先</h6>
                        <address class="small">
                            <strong>本社</strong><br>
                            〒100-0001<br>
                            東京都千代田区千代田1-1<br>
                            TomoTripビル 8F<br><br>
                            
                            <strong>TEL:</strong> 03-1234-5678<br>
                            <strong>FAX:</strong> 03-1234-5679<br>
                            <strong>Email:</strong> info@tomotrip.com
                        </address>
                    </div>
                </div>
                
                <div class="mt-4">
                    <h6 class="fw-bold mb-3">ミッション</h6>
                    <blockquote class="blockquote text-center">
                        <p class="mb-0">"地域の魅力を最大限に伝える、信頼できるガイドと旅行者をつなぎ、忘れられない旅行体験を創造する"</p>
                    </blockquote>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showTerms() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = '利用規約';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="mb-3">
                    <small class="text-muted">最終更新：2025年4月1日</small>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">第1条（適用）</h6>
                    <p class="small">本規約は、株式会社TomoTrip（以下「当社」）が提供するサービス「TomoTrip」の利用に関し、利用者と当社との間の権利義務関係を定めるものです。</p>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">第2条（利用登録）</h6>
                    <p class="small">サービスの利用を希望する者は、本規約に同意の上、当社の定める方法によって利用登録を申請し、当社がこれを承認することによって、利用登録が完了します。</p>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">第3条（禁止事項）</h6>
                    <p class="small">利用者は、サービスの利用にあたり、以下の行為をしてはなりません：</p>
                    <ul class="small">
                        <li>法令または公序良俗に違反する行為</li>
                        <li>犯罪行為に関連する行為</li>
                        <li>他の利用者、第三者または当社の権利を侵害する行為</li>
                        <li>虚偽の情報を登録する行為</li>
                    </ul>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">第4条（サービス料金）</h6>
                    <p class="small">利用者は、ガイドサービスの利用にあたり、当社が定める料金を支払うものとします。クレジットカード決済の場合、3.6%の決済手数料が加算されます。</p>
                </div>
                
                <div class="alert alert-info">
                    <small><i class="bi bi-info-circle me-2"></i>完全版の利用規約は、サービス利用時に詳細をご確認いただけます。</small>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showPrivacy() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = 'プライバシーポリシー';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="mb-3">
                    <small class="text-muted">最終更新：2025年4月1日</small>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">個人情報の取得</h6>
                    <p class="small">当社は、以下の個人情報を取得いたします：</p>
                    <ul class="small">
                        <li>氏名、住所、電話番号、メールアドレス</li>
                        <li>プロフィール写真、身分証明書画像</li>
                        <li>クレジットカード情報（決済代行会社経由）</li>
                        <li>サービス利用履歴、位置情報</li>
                    </ul>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">利用目的</h6>
                    <p class="small">取得した個人情報は以下の目的で利用します：</p>
                    <ul class="small">
                        <li>サービスの提供および運営</li>
                        <li>利用者の身元確認</li>
                        <li>料金の請求および決済</li>
                        <li>カスタマーサポート</li>
                        <li>サービス改善のための分析</li>
                    </ul>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">第三者提供</h6>
                    <p class="small">個人情報は、法令に基づく場合を除き、本人の同意なく第三者に提供することはありません。ただし、以下の場合は除きます：</p>
                    <ul class="small">
                        <li>決済処理のための決済代行業者への提供</li>
                        <li>緊急時の安全確保のための関係機関への提供</li>
                    </ul>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">セキュリティ</h6>
                    <p class="small">当社は、個人情報の漏洩、滅失または毀損の防止その他の個人情報の安全管理のために、SSL暗号化通信、データベース暗号化等の必要かつ適切な措置を講じます。</p>
                </div>
                
                <div class="alert alert-success">
                    <small><i class="bi bi-shield-check me-2"></i>当社はプライバシーマーク認定企業です（P123456789）</small>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        function showCookies() {
            const modal = createFooterModal();
            document.getElementById('footerModalTitle').textContent = 'Cookie規定';
            document.getElementById('footerModalBody').innerHTML = `
                <div class="mb-4">
                    <h6 class="fw-bold">Cookieとは</h6>
                    <p class="small">Cookieとは、ウェブサイトがユーザーのコンピューターに保存する小さなテキストファイルです。サイトの利便性向上や利用状況の分析に使用されます。</p>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">使用するCookieの種類</h6>
                    
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title text-success">必須Cookie</h6>
                                    <p class="card-text small">サービスの基本機能に必要</p>
                                    <ul class="small">
                                        <li>ログイン状態の保持</li>
                                        <li>セキュリティ</li>
                                        <li>設定の保存</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h6 class="card-title text-info">分析Cookie</h6>
                                    <p class="card-text small">サービス改善のための分析</p>
                                    <ul class="small">
                                        <li>Google Analytics</li>
                                        <li>利用統計</li>
                                        <li>パフォーマンス測定</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="mb-4">
                    <h6 class="fw-bold">Cookie設定の管理</h6>
                    <p class="small">ブラウザの設定により、Cookieの受け入れを拒否することができます。ただし、必須Cookieを無効にすると、サービスの一部が正常に機能しない場合があります。</p>
                    
                    <div class="mt-3">
                        <button class="btn btn-outline-primary btn-sm me-2" >Cookie設定</button>
                        <button class="btn btn-outline-secondary btn-sm" >全Cookie削除</button>
                    </div>
                </div>
                
                <div class="alert alert-warning">
                    <small><i class="bi bi-exclamation-triangle me-2"></i>分析Cookieの使用には同意が必要です。同意しない場合でも基本機能はご利用いただけます。</small>
                </div>
            `;
            new bootstrap.Modal(modal).show();
        }
        
        // Removed duplicate function - using the main version above
    </script>

    <!-- Critical Footer Fix Script -->
    <script>
        console.log('🔍 FOOTER DEBUG SCRIPT LOADED - EMERGENCY MODE');
        
        // Immediate footer check
        function checkFooterImmediately() {
            const footer = document.querySelector('#main-footer');
            console.log('🔍 Immediate footer check:', !!footer);
            if (footer) {
                console.log('✅ Footer element found - applying comprehensive styles');
                
                // Force footer container styles
                footer.style.backgroundColor = '#212529';
                footer.style.color = 'white';
                footer.style.padding = '3rem 0';
                footer.style.marginTop = '2rem';
                footer.style.position = 'relative';
                footer.style.zIndex = '100';
                footer.style.width = '100%';
                footer.style.clear = 'both';
                footer.style.display = 'block';
                footer.style.visibility = 'visible';
                footer.style.opacity = '1';
                footer.classList.add('footer-forced-visible');
                
                // Force container and row visibility
                const container = footer.querySelector('.container');
                if (container) {
                    container.style.display = 'block';
                    container.style.visibility = 'visible';
                    container.style.opacity = '1';
                    container.style.maxWidth = '1200px';
                    container.style.margin = '0 auto';
                    container.style.padding = '0 15px';
                }
                
                const row = footer.querySelector('.row');
                if (row) {
                    row.style.display = 'flex';
                    row.style.flexWrap = 'wrap';
                    row.style.margin = '0 -15px';
                    row.style.visibility = 'visible';
                    row.style.opacity = '1';
                }
                
                // Force all columns to be visible
                const columns = footer.querySelectorAll('[class*="col-"]');
                columns.forEach((col, index) => {
                    console.log(`✅ Fixing column ${index + 1}`);
                    col.style.display = 'block';
                    col.style.visibility = 'visible';
                    col.style.opacity = '1';
                    col.style.padding = '0 15px';
                    col.style.marginBottom = '2rem';
                    col.style.flex = '1 1 auto';
                    col.style.minWidth = '200px';
                });
                
                // Force all text elements to be visible with proper colors
                const headings = footer.querySelectorAll('h5, h6');
                headings.forEach((h, index) => {
                    console.log(`✅ Fixing heading ${index + 1}: ${h.textContent}`);
                    h.style.color = 'white';
                    h.style.fontWeight = 'bold';
                    h.style.marginBottom = '1rem';
                    h.style.display = 'block';
                    h.style.visibility = 'visible';
                    h.style.opacity = '1';
                });
                
                const textElements = footer.querySelectorAll('p, li, a');
                textElements.forEach((el, index) => {
                    if (index < 10) console.log(`✅ Fixing text element ${index + 1}: ${el.textContent.substring(0, 30)}...`);
                    el.style.color = '#adb5bd';
                    el.style.fontSize = '14px';
                    el.style.display = 'block';
                    el.style.visibility = 'visible';
                    el.style.opacity = '1';
                });
                
                const lists = footer.querySelectorAll('ul');
                lists.forEach((ul, index) => {
                    console.log(`✅ Fixing list ${index + 1}`);
                    ul.style.listStyle = 'none';
                    ul.style.padding = '0';
                    ul.style.margin = '0';
                    ul.style.display = 'block';
                    ul.style.visibility = 'visible';
                    ul.style.opacity = '1';
                });
                
                console.log('✅ Footer comprehensive styling complete');
            } else {
                console.log('⏳ Footer element not found immediately, will retry...');
            }
        }
        
        // Optimized footer initialization with proper timing
        function initializeFooter() {
            const footer = document.querySelector('.footer-section');
            if (footer) {
                console.log('🔍 Footer found - applying styles');
                checkFooterImmediately();
                return true;
            } else {
                console.log('🔍 Footer not found - waiting...');
                return false;
            }
        }
        
        // Try immediate initialization first
        if (!initializeFooter()) {
            // If footer not found, use DOMContentLoaded
            document.addEventListener('DOMContentLoaded', function() {
                console.log('🔍 DOMContentLoaded - checking footer');
                if (!initializeFooter()) {
                    // Final fallback with timeout
                    setTimeout(function() {
                        console.log('🔍 Final timeout - checking footer');
                        initializeFooter();
                    }, 100);
                }
            });
        }
    </script>
    
    <!-- Footer Force CSS -->
    <style>
        .footer-forced-visible {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            position: relative !important;
            z-index: 1000 !important;
            min-height: 400px !important;
        }
        
        /* Footer Emergency Fix */
        #main-footer {
            background-color: #212529 !important;
            color: white !important;
            padding: 3rem 0 !important;
            margin-top: 2rem !important;
            position: relative !important;
            z-index: 100 !important;
            width: 100% !important;
            clear: both !important;
        }
        
        #main-footer .container {
            max-width: 1200px !important;
            margin: 0 auto !important;
            padding: 0 15px !important;
        }
        
        #main-footer .row {
            display: flex !important;
            flex-wrap: wrap !important;
            margin: 0 -15px !important;
        }
        
        #main-footer .col-lg-3,
        #main-footer .col-lg-2,
        #main-footer .col-md-6 {
            padding: 0 15px !important;
            margin-bottom: 2rem !important;
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            flex: 1 1 auto !important;
            min-width: 200px !important;
        }
        
        #main-footer h5,
        #main-footer h6 {
            color: white !important;
            font-weight: bold !important;
            margin-bottom: 1rem !important;
        }
        
        #main-footer p,
        #main-footer li,
        #main-footer a {
            color: #adb5bd !important;
            font-size: 14px !important;
        }
        
        #main-footer a:hover {
            color: #4ecdc4 !important;
        }
        
        #main-footer .text-white {
            color: white !important;
        }
        
        #main-footer .text-muted {
            color: #adb5bd !important;
        }
        
        #main-footer ul {
            list-style: none !important;
            padding: 0 !important;
            margin: 0 !important;
        }
        
        #main-footer li {
            margin-bottom: 0.5rem !important;
        }
    </style>

    <!-- Footer -->
    <footer id="main-footer" style="background-color: #212529 !important; color: white !important; padding: 3rem 0 !important; margin-top: 2rem !important; position: relative !important; z-index: 100 !important; width: 100% !important; clear: both !important; display: block !important; visibility: visible !important; opacity: 1 !important;">
        <div class="container">
            <div class="row">
                <!-- Company Info -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="d-flex align-items-center mb-3">
                        <img src="TomoTripロゴ_1752342509960.png" alt="TomoTrip" style="height: 40px;" class="me-2">
                        <h5 class="mb-0">TomoTrip</h5>
                    </div>
                    <p class="text-muted small">地域の専門ガイドと観光客をつなぐプラットフォーム。安全で信頼できる旅行体験をご提供します。</p>
                    <div class="d-flex gap-3">
                        <a href="https://facebook.com/tomotrip" class="text-muted hover-social" target="_blank" rel="noopener" title="Facebook">
                            <i class="bi bi-facebook fs-5"></i>
                        </a>
                        <a href="https://twitter.com/tomotrip" class="text-muted hover-social" target="_blank" rel="noopener" title="Twitter">
                            <i class="bi bi-twitter fs-5"></i>
                        </a>
                        <a href="https://instagram.com/tomotrip" class="text-muted hover-social" target="_blank" rel="noopener" title="Instagram">
                            <i class="bi bi-instagram fs-5"></i>
                        </a>
                        <a href="https://youtube.com/tomotrip" class="text-muted hover-social" target="_blank" rel="noopener" title="YouTube">
                            <i class="bi bi-youtube fs-5"></i>
                        </a>
                    </div>
                </div>

                <!-- Services -->
                <div class="col-lg-2 col-md-6 mb-4">
                    <h6 class="text-white mb-3">サービス</h6>
                    <ul class="list-unstyled">
                        <li class="mb-2"><a href="#guides-section" class="text-muted text-decoration-none hover-link" >ガイド検索</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >ガイド登録</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >観光客登録</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >予約管理</a></li>
                        <li class="mb-2"><a href="sponsor-registration.html" class="text-muted text-decoration-none hover-link">協賛店登録</a></li>
                    </ul>
                </div>

                <!-- Support -->
                <div class="col-lg-2 col-md-6 mb-4">
                    <h6 class="text-white mb-3">サポート</h6>
                    <ul class="list-unstyled">
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >よくある質問</a></li>
                        <li class="mb-2"><a href="chat.html" class="text-muted text-decoration-none hover-link">お問い合わせ</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >安全について</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >キャンセル規定</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >ヘルプセンター</a></li>
                    </ul>
                </div>

                <!-- Legal -->
                <div class="col-lg-2 col-md-6 mb-4">
                    <h6 class="text-white mb-3">法的事項</h6>
                    <ul class="list-unstyled">
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >会社概要</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >利用規約</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >プライバシーポリシー</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >Cookie規定</a></li>
                        <li class="mb-2"><a href="#" class="text-muted text-decoration-none hover-link" >法的遵守</a></li>
                    </ul>
                </div>

                <!-- Contact Info -->
                <div class="col-lg-3 col-md-6 mb-4">
                    <h6 class="text-white mb-3">お問い合わせ</h6>
                    <div class="mb-3">
                        <p class="text-muted small mb-2">
                            <i class="bi bi-envelope me-2"></i>
                            <a href="mailto:info@tomotrip.com" class="text-muted text-decoration-none hover-link">info@tomotrip.com</a>
                        </p>
                        <p class="text-muted small mb-2">
                            <i class="bi bi-telephone me-2"></i>
                            <a href="tel:03-1234-5678" class="text-muted text-decoration-none hover-link">03-1234-5678</a>
                        </p>
                        <p class="text-muted small mb-3">
                            <i class="bi bi-clock me-2"></i>平日 9:00-18:00（土日祝休）
                        </p>
                        <p class="text-muted small mb-2">
                            <i class="bi bi-geo-alt me-2"></i>〒100-0001 東京都千代田区千代田1-1
                        </p>
                    </div>
                    <div class="mt-3">
                        <p class="text-muted small mb-2">緊急時サポート:</p>
                        <p class="text-muted small mb-0">
                            <i class="bi bi-telephone-fill me-2 text-warning"></i>
                            <a href="tel:080-9999-8888" class="text-warning text-decoration-none hover-link">080-9999-8888</a>
                            <small class="d-block text-muted">（24時間対応）</small>
                        </p>
                    </div>
                </div>
            </div>

            <hr class="my-4 border-secondary">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <p class="text-muted small mb-0">&copy; 2025 TomoTrip. All rights reserved.</p>
                </div>
                <div class="col-md-6 text-md-end">

                </div>
            </div>
        </div>
    </footer>

    <!-- Final Footer Force Script - Must be last -->
    <script>
        console.log('🚨 FINAL FOOTER FORCE SCRIPT EXECUTING');
        
        // Absolutely force footer visibility
        const forceFooterVisible = function() {
            const footer = document.getElementById('main-footer') || document.querySelector('footer');
            console.log('🔍 Final footer check:', !!footer);
            
            if (footer) {
                // Apply multiple layers of forced visibility
                footer.style.cssText = `
                    display: block !important;
                    visibility: visible !important;
                    opacity: 1 !important;
                    position: relative !important;
                    z-index: 9999 !important;
                    min-height: 400px !important;
                    background-color: #212529 !important;
                    color: #f8f9fa !important;
                    padding: 3rem 0 !important;
                    margin-top: 3rem !important;
                    clear: both !important;
                    width: 100% !important;
                `;
                
                footer.classList.add('footer-force-visible');
                
                // Force parent containers to be visible too
                let parent = footer.parentElement;
                while (parent && parent !== document.body) {
                    parent.style.display = 'block';
                    parent.style.visibility = 'visible';
                    parent = parent.parentElement;
                }
                
                console.log('✅ FOOTER FORCED VISIBLE WITH EXTREME MEASURES');
                console.log('Footer computed styles:', window.getComputedStyle(footer).display);
                
                return true;
            } else {
                console.error('❌ FOOTER ELEMENT COMPLETELY MISSING FROM DOM');
                return false;
            }
        };
        
        // Execute immediately
        forceFooterVisible();
        
        // Execute after a delay
        setTimeout(forceFooterVisible, 100);
        setTimeout(forceFooterVisible, 500);
        setTimeout(forceFooterVisible, 1000);
        
        // Add to window load event as final fallback
        window.addEventListener('load', function() {
            console.log('🔍 Window load - final footer force attempt');
            forceFooterVisible();
        });
        
        console.log('🚨 FINAL FOOTER FORCE SCRIPT COMPLETE');
    </script>

    <!-- Additional CSS Force -->
    <style>
        #main-footer,
        footer {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            position: relative !important;
            z-index: 9999 !important;
            min-height: 400px !important;
            background-color: #212529 !important;
            color: #f8f9fa !important;
            padding: 3rem 0 !important;
            margin-top: 3rem !important;
            clear: both !important;
            width: 100% !important;
        }
        
        .footer-force-visible {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
        }
        
        body {
            padding-bottom: 0 !important;
        }
        
        /* Footer hover effects */
        .hover-link:hover {
            color: #4ecdc4 !important;
            transition: color 0.3s ease;
        }
        
        .hover-social:hover {
            color: #4ecdc4 !important;
            transform: translateY(-2px);
            transition: all 0.3s ease;
        }
        
        .hover-social:hover i {
            transform: scale(1.1);
        }
    </style>



    <!-- OCEAN YACHT BACKGROUND - ABSOLUTE FINAL VERSION -->
    <style>
        /* Complete override - disable all previous styles */
        .hero-section * {
            position: relative !important;
            z-index: 10 !important;
        }
        
        /* Force ocean yacht background with bright, cheerful appearance */
        .hero-section {
            position: relative !important;
            height: 100vh !important;
            min-height: 100vh !important;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            overflow: hidden !important;
        }
        
        /* Background image layer with brightness filter */
        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('/attached_assets/ChatGPT%20Image%202025%E5%B9%B48%E6%9C%885%E6%97%A5%2021_41_02_1754397710711.png');
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;
            background-attachment: scroll;
            /* Moderately bright, natural filters */
            filter: brightness(1.2) contrast(1.05) saturate(1.1);
            z-index: -2;
        }
        
        /* Soft overlay for text readability */
        .hero-section::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(rgba(255,255,255,0.05), rgba(0,100,200,0.1));
            z-index: -1;
        }
        
        /* Ensure UI elements are visible */
        .hero-section .container,
        .hero-section .row,
        .hero-section .col-12,
        .hero-section .text-center {
            position: relative !important;
            z-index: 20 !important;
        }
    </style>

    <script>
        // IMMEDIATE CONSOLE TEST
        console.log('🚨 SCRIPT BLOCK EXECUTING - Background fix system loading...');
        console.log('🕐 Script execution time:', new Date().toLocaleTimeString());
        
        // REPLIT EDITOR SPECIFIC BACKGROUND FIX
        function forceBackgroundImage() {
            console.log('🔧 REPLIT EDITOR FIX: Diagnosing and applying background');
            console.log('📍 Function execution started at:', new Date().toLocaleTimeString());
            
            const heroSection = document.querySelector('.hero-section');
            if (heroSection) {
                // Try multiple image path formats
                const imagePaths = [
                    './attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png',
                    'attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png',
                    '/attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png'
                ];
                
                // Test image accessibility
                function testImagePath(path, callback) {
                    const img = new Image();
                    img.onload = () => callback(true, path);
                    img.onerror = () => callback(false, path);
                    img.src = path;
                }
                
                // Try each path
                let pathIndex = 0;
                function tryNextPath() {
                    if (pathIndex >= imagePaths.length) {
                        console.log('❌ All image paths failed - using ocean gradient fallback');
                        heroSection.className = 'hero-section fallback-ocean';
                        heroSection.style.background = 'linear-gradient(135deg, #1e3c72 0%, #2a5298 25%, #4a90e2 50%, #7bb3f0 75%, #a8d8ea 100%)';
                        return;
                    }
                    
                    const currentPath = imagePaths[pathIndex];
                    console.log(`🔍 Testing image path ${pathIndex + 1}: ${currentPath}`);
                    
                    testImagePath(currentPath, (success, path) => {
                        if (success) {
                            console.log(`✅ SUCCESS: Image loaded from ${path}`);
                            
                            // Apply successful path with multiple methods
                            heroSection.style.background = `linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.35)), url('${path}')`;
                            heroSection.style.backgroundSize = 'cover';
                            heroSection.style.backgroundPosition = 'center';
                            heroSection.style.backgroundRepeat = 'no-repeat';
                            heroSection.style.backgroundAttachment = 'scroll';
                            
                            // Create dynamic CSS
                            const dynamicStyle = document.createElement('style');
                            dynamicStyle.id = 'working-background-path';
                            dynamicStyle.textContent = `
                                .hero-section {
                                    background: linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.35)), url('${path}') !important;
                                    background-size: cover !important;
                                    background-position: center !important;
                                    background-repeat: no-repeat !important;
                                    background-attachment: scroll !important;
                                }
                            `;
                            
                            const existing = document.getElementById('working-background-path');
                            if (existing) existing.remove();
                            document.head.appendChild(dynamicStyle);
                            
                        } else {
                            console.log(`❌ FAILED: ${path}`);
                            pathIndex++;
                            tryNextPath();
                        }
                    });
                }
                
                tryNextPath();
                
                // Additional iframe detection and fix
                setTimeout(() => {
                    if (window.frameElement || window !== window.parent) {
                        console.log('🖼️ IFRAME DETECTED: Applying iframe-specific fixes');
                        
                        // Create iframe-specific style
                        const iframeStyle = document.createElement('style');
                        iframeStyle.id = 'iframe-background-fix';
                        iframeStyle.textContent = `
                            .hero-section {
                                background: linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.35)), 
                                            url('./attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png') !important;
                                background-size: cover !important;
                                background-position: center !important;
                                background-repeat: no-repeat !important;
                                background-attachment: scroll !important;
                                min-height: 100vh !important;
                                position: relative !important;
                            }
                        `;
                        document.head.appendChild(iframeStyle);
                        
                        // Force style application
                        heroSection.style.cssText = `
                            background: linear-gradient(rgba(0,0,0,0.25), rgba(0,0,0,0.35)), 
                                       url('./attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png') !important;
                            background-size: cover !important;
                            background-position: center !important;
                            background-repeat: no-repeat !important;
                            background-attachment: scroll !important;
                        `;
                    }
                }, 500);
                
                console.log('🌊 Background path testing and iframe detection initiated');
            }
        }

        // IMMEDIATE EXECUTION - No waiting for events
        console.log('🚀 STARTING BACKGROUND SYSTEM IMMEDIATELY');
        console.log('📋 DOM ready state:', document.readyState);
        console.log('🌐 Window loaded:', document.readyState === 'complete');
        
        // Execute immediately without any delays
        try {
            forceBackgroundImage();
            console.log('✅ First execution completed');
        } catch (error) {
            console.error('❌ Immediate execution failed:', error);
        }
        
        // Backup event listeners
        document.addEventListener('DOMContentLoaded', () => {
            console.log('📋 DOMContentLoaded - executing forceBackgroundImage');
            forceBackgroundImage();
        });
        
        window.addEventListener('load', () => {
            console.log('🌐 Window load - executing forceBackgroundImage');
            forceBackgroundImage();
        });
        
        // Aggressive timeout execution
        setTimeout(() => {
            console.log('⏰ Timeout 10ms - executing forceBackgroundImage');
            forceBackgroundImage();
        }, 10);
        
        setTimeout(() => {
            console.log('⏰ Timeout 50ms - executing forceBackgroundImage');
            forceBackgroundImage();
        }, 50);
        
        setTimeout(() => {
            console.log('⏰ Timeout 100ms - executing forceBackgroundImage');
            forceBackgroundImage();
        }, 100);
        
        setTimeout(() => {
            console.log('⏰ Timeout 500ms - executing forceBackgroundImage');
            forceBackgroundImage();
        }, 500);
        
        setTimeout(() => {
            console.log('⏰ Timeout 1000ms - executing forceBackgroundImage');
            forceBackgroundImage();
        }, 1000);
        
        // Debug function to check current background
        window.checkBackground = function() {
            const heroSection = document.querySelector('.hero-section');
            if (heroSection) {
                const computed = getComputedStyle(heroSection);
                console.log('🔍 Current background-image:', computed.backgroundImage);
                console.log('🔍 Current background:', computed.background);
                console.log('🔍 Element classes:', heroSection.className);
                console.log('🔍 Inline styles:', heroSection.style.cssText);
            }
        };
        
        // Emergency manual fix function
        window.fixBackground = function() {
            console.log('🚨 MANUAL BACKGROUND FIX ACTIVATED');
            forceBackgroundImage();
        };
        
        // Continuous monitoring and reapplication
        let backgroundCheck = setInterval(() => {
            const heroSection = document.querySelector('.hero-section');
            if (heroSection) {
                const computed = getComputedStyle(heroSection);
                const bgImage = computed.backgroundImage;
                
                if (!bgImage || bgImage === 'none' || !bgImage.includes('ChatGPT')) {
                    console.log('🔄 Background lost - reapplying force');
                    forceBackgroundImage();
                }
            }
        }, 3000);
        
        // Stop monitoring after 30 seconds
        setTimeout(() => {
            clearInterval(backgroundCheck);
            console.log('🛑 Background monitoring stopped');
        }, 30000);
        
        // Admin debug functions
        window.clearTouristData = function() {
            localStorage.removeItem('touristRegistration');
            console.log('Tourist registration data cleared');
            location.reload();
        };
        
        window.checkRegistrationStatus = function() {
            const data = localStorage.getItem('touristRegistration');
            console.log('Registration status:', data ? 'Registered' : 'Not registered');
            if (data) {
                console.log('Data:', JSON.parse(data));
            }
        };
    </script>

    <!-- EMERGENCY SCRIPT TEST - Place just before closing body -->
    <script>
        console.log('🚨 EMERGENCY SCRIPT TEST - This should appear in console!');
        console.log('📍 Time:', new Date().toLocaleTimeString());
        
        // Force beautiful ocean yacht background - FIXED VERSION
        function applyOceanBackground() {
            console.log('🔍 BACKGROUND DEBUG: Function called at', new Date().toLocaleTimeString());
            const heroSection = document.querySelector('.hero-section');
            console.log('🔍 HERO SECTION FOUND:', !!heroSection);
            if (heroSection) {
                console.log('🌊 OCEAN YACHT: Applying beautiful ocean background');
                
                // Define encodedImageUrl properly for any future use
                const encodedImageUrl = '/attached_assets/ChatGPT%20Image%202025%E5%B9%B48%E6%9C%885%E6%97%A5%2021_41_02_1754397710711.png';
                
                // Try multiple image paths to solve loading issues
                const imagePaths = [
                    './attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png',
                    '/attached_assets/ChatGPT%20Image%202025%E5%B9%B48%E6%9C%885%E6%97%A5%2021_41_02_1754397710711.png',
                    'attached_assets/ChatGPT Image 2025年8月5日 21_41_02_1754397710711.png'
                ];
                
                let imageLoadSuccess = false;
                
                // Try each image path until one works
                function tryImagePath(pathIndex) {
                    if (pathIndex >= imagePaths.length) {
                        console.log('❌ All paths failed - using ocean gradient');
                        heroSection.style.cssText = `
                            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 25%, #4a90e2 50%, #7bb3f0 75%, #a8d8ea 100%) !important;
                            min-height: 100vh !important;
                            height: 100vh !important;
                            display: flex !important;
                            align-items: center !important;
                            justify-content: center !important;
                            position: relative !important;
                            overflow: hidden !important;
                        `;
                        return;
                    }
                    
                    const currentPath = imagePaths[pathIndex];
                    console.log(`🔍 Testing image path ${pathIndex + 1}: ${currentPath}`);
                    
                    const testImg = new Image();
                    testImg.onload = () => {
                        console.log(`✅ SUCCESS: Image loaded from path ${pathIndex + 1}`);
                        heroSection.style.cssText = `
                            position: relative !important;
                            min-height: 100vh !important;
                            height: 100vh !important;
                            display: flex !important;
                            align-items: center !important;
                            justify-content: center !important;
                            overflow: hidden !important;
                        `;
                        imageLoadSuccess = true;
                    };
                    testImg.onerror = () => {
                        console.log(`❌ FAILED: Path ${pathIndex + 1} failed to load`);
                        tryImagePath(pathIndex + 1);
                    };
                    testImg.src = currentPath;
                }
                
                tryImagePath(0);
                
                // Ensure all content is visible with proper z-index
                const allElements = heroSection.querySelectorAll('*');
                allElements.forEach(element => {
                    if (!element.style.position || element.style.position === 'static') {
                        element.style.position = 'relative';
                    }
                    element.style.zIndex = '20';
                });
                
                console.log('✅ OCEAN YACHT: Beautiful sea and yacht background applied successfully');
                
            } else {
                console.log('❌ ERROR: hero-section not found');
                console.log('🔍 Available elements:');
                const allSections = document.querySelectorAll('section');
                console.log('🔍 Sections count:', allSections.length);
                allSections.forEach((section, index) => {
                    console.log(`🔍 Section ${index}:`, section.className);
                });
            }
        }
        
        // Optimized background application with proper timing
        function initializeBackground() {
            const heroSection = document.querySelector('.hero-section');
            if (heroSection) {
                applyOceanBackground();
                return true;
            }
            return false;
        }
        
        // Try immediate initialization
        if (!initializeBackground()) {
            // Use DOMContentLoaded if hero section not ready
            document.addEventListener('DOMContentLoaded', function() {
                console.log('🔍 DOMContentLoaded - initializing background');
                if (!initializeBackground()) {
                    // Final fallback
                    setTimeout(initializeBackground, 100);
                }
            });
        }
    </script>

</body>
</html>