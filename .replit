run = "node server.js"

[interpreter]
language = "nodejs"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "TomoTrip"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "SimpleServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "CleanServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "MainServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "StableServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "TestServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Port5001Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Mobile-Test-Server"

[[workflows.workflow]]
name = "Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "TomoTrip"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "SimpleServer"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "CleanServer"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "MainServer"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "StableServer"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 simple_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "TestServer"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 test_server.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Port5001Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """
python3 -c \"
import http.server
import socketserver
import os

PORT = 5001
class Handler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=os.getcwd(), **kwargs)

socketserver.TCPServer.allow_reuse_address = True
with socketserver.TCPServer(('0.0.0.0', PORT), Handler) as httpd:
    print(f'‚úÖ ServerËµ∑Âãï: „Éù„Éº„Éà{PORT}')
    httpd.serve_forever()
\""""
waitForPort = 5001

[[workflows.workflow]]
name = "Mobile-Test-Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """
python3 -c \"
import http.server
import socketserver
import os

PORT = 5000
class Handler(http.server.SimpleHTTPRequestHandler):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, directory=os.getcwd(), **kwargs)

socketserver.TCPServer.allow_reuse_address = True
with socketserver.TCPServer(('0.0.0.0', PORT), Handler) as httpd:
    print(f'üåê TomoTrip ServerËµ∑Âãï: „Éù„Éº„Éà{PORT}')
    print(f'üì± „É¢„Éê„Ç§„É´„ÉÜ„Çπ„ÉàÁî®URL: http://localhost:{PORT}')
    httpd.serve_forever()
\""""
waitForPort = 5000

[nix]
channel = "stable-24_05"
packages = ["python3"]

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 5002
externalPort = 3001

[[ports]]
localPort = 8000
externalPort = 8000
