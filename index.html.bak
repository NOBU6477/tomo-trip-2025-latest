  <!-- 電話番号認証モーダル -->
  <div class="modal fade" id="phoneVerificationModal" tabindex="-1" aria-labelledby="phoneVerificationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="phoneVerificationModalLabel" data-i18n="phone.title">電話番号認証</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p data-i18n="phone.explanation">電話番号認証を完了してください。これはセキュリティを高め、不正利用を防止するために必要です。</p>
          
          <div class="mb-3">
            <label for="phone-number" class="form-label" data-i18n="phone.numberLabel">電話番号</label>
            <div class="input-group mb-3">
              <span class="input-group-text">+81</span>
              <input type="tel" class="form-control" id="phone-number" placeholder="90-1234-5678">
              <button class="btn btn-primary" type="button" id="send-code-btn" data-i18n="phone.sendCode">認証コード送信</button>
            </div>
            <div class="form-text" data-i18n="phone.numberHelper">ハイフンなしの電話番号を入力してください</div>
          </div>
          
          <!-- reCAPTCHAが表示されるエリア -->
          <div id="recaptcha-container" class="mb-3"></div>
          
          <form id="verification-form" class="mt-4">
            <div class="mb-3">
              <label for="verification-code" class="form-label" data-i18n="phone.codeLabel">認証コード</label>
              <input type="text" class="form-control" id="verification-code" required>
              <div class="form-text" data-i18n="phone.codeHelper">SMSで送信された6桁のコードを入力してください</div>
              <div id="verification-success" class="alert alert-success mt-2 d-none" data-i18n="phone.verifySuccess">
                電話番号が認証されました
              </div>
              <div id="verification-error" class="alert alert-danger mt-2 d-none">
                認証コードが正しくありません
              </div>
              <div class="mt-3 mb-1">
                <small class="text-muted" data-i18n="phone.testInfo">テスト環境では、認証コード「123456」を使用できます</small>
              </div>
            </div>
            <button type="submit" class="btn btn-primary w-100" data-i18n="phone.verifyBtn">認証する</button>
          </form>
        </div>
      </div>
    </div>
  </div>
<!-- 身分証明書アップロードモーダル -->
  <div class="modal fade" id="idDocumentModal" tabindex="-1" aria-labelledby="idDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="idDocumentModalLabel" data-i18n="document.title">身分証明書のアップロード</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div id="document-error" class="alert alert-danger d-none" role="alert"></div>
          <div id="document-success" class="alert alert-success d-none" role="alert" data-i18n="document.success">アップロードが完了しました！</div>
          <p data-i18n="document.description">本人確認のため、有効な身分証明書をアップロードしてください。</p>
          <form id="document-form">
            <input type="hidden" name="user-type" value="tourist">
            <div class="mb-3">
              <label for="document-type" class="form-label" data-i18n="document.type">書類の種類</label>
              <select class="form-select" id="document-type" required>
                <option value="" selected disabled data-i18n="document.selectType">書類の種類を選択</option>
                <option value="passport" data-i18n="document.passport">パスポート</option>
                <option value="driverLicense" data-i18n="document.driverLicense">運転免許証</option>
                <option value="idCard" data-i18n="document.idCard">マイナンバーカード</option>
              </select>
            </div>
            <div id="passport-upload" class="document-upload mb-3 d-none">
              <label for="passport-file" class="form-label" data-i18n="document.passportFile">パスポート</label>
              <div class="input-group mb-3">
                <input type="file" class="form-control" id="passport-file" accept="image/jpeg, image/png, application/pdf">
                <button type="button" class="btn btn-outline-secondary remove-file" data-input="passport-file" data-i18n="document.remove">削除</button>
              </div>
              <div id="passport-preview" class="preview-container d-none mb-2">
                <img id="passport-image" src="#" alt="プレビュー" class="img-thumbnail">
              </div>
              <div id="passport-upload-prompt" class="upload-prompt">
                <p data-i18n="document.uploadPrompt">クリックしてファイルを選択するか、ここにドラッグ＆ドロップしてください。</p>
                <p class="text-muted small" data-i18n="document.fileRestriction">JPG, PNG, または PDF形式、最大5MBまで</p>
              </div>
            </div>
            <div id="license-upload" class="document-upload mb-3 d-none">
              <div>
                <label for="license-front-file" class="form-label" data-i18n="document.licenseFront">運転免許証（表面）</label>
                <div class="input-group mb-3">
                  <input type="file" class="form-control" id="license-front-file" accept="image/jpeg, image/png, application/pdf">
                  <button type="button" class="btn btn-outline-secondary remove-file" data-input="license-front-file" data-i18n="document.remove">削除</button>
                </div>
                <div id="license-front-preview" class="preview-container d-none mb-2">
                  <img id="license-front-image" src="#" alt="表面プレビュー" class="img-thumbnail">
                </div>
                <div id="license-front-upload-prompt" class="upload-prompt">
                  <p data-i18n="document.uploadPrompt">クリックしてファイルを選択するか、ここにドラッグ＆ドロップしてください。</p>
                  <p class="text-muted small" data-i18n="document.fileRestriction">JPG, PNG, または PDF形式、最大5MBまで</p>
                </div>
              </div>
              <div class="mt-3">
                <label for="license-back-file" class="form-label" data-i18n="document.licenseBack">運転免許証（裏面）</label>
                <div class="input-group mb-3">
                  <input type="file" class="form-control" id="license-back-file" accept="image/jpeg, image/png, application/pdf">
                  <button type="button" class="btn btn-outline-secondary remove-file" data-input="license-back-file" data-i18n="document.remove">削除</button>
                </div>
                <div id="license-back-preview" class="preview-container d-none mb-2">
                  <img id="license-back-image" src="#" alt="裏面プレビュー" class="img-thumbnail">
                </div>
                <div id="license-back-upload-prompt" class="upload-prompt">
                  <p data-i18n="document.uploadPrompt">クリックしてファイルを選択するか、ここにドラッグ＆ドロップしてください。</p>
                  <p class="text-muted small" data-i18n="document.fileRestriction">JPG, PNG, または PDF形式、最大5MBまで</p>
                </div>
              </div>
            </div>
            <div id="idcard-upload" class="document-upload mb-3 d-none">
              <div>
                <label for="idcard-front-file" class="form-label" data-i18n="document.idCardFront">マイナンバーカード（表面）</label>
                <div class="input-group mb-3">
                  <input type="file" class="form-control" id="idcard-front-file" accept="image/jpeg, image/png, application/pdf">
                  <button type="button" class="btn btn-outline-secondary remove-file" data-input="idcard-front-file" data-i18n="document.remove">削除</button>
                </div>
                <div id="idcard-front-preview" class="preview-container d-none mb-2">
                  <img id="idcard-front-image" src="#" alt="表面プレビュー" class="img-thumbnail">
                </div>
                <div id="idcard-front-upload-prompt" class="upload-prompt">
                  <p data-i18n="document.uploadPrompt">クリックしてファイルを選択するか、ここにドラッグ＆ドロップしてください。</p>
                  <p class="text-muted small" data-i18n="document.fileRestriction">JPG, PNG, または PDF形式、最大5MBまで</p>
                </div>
              </div>
              <div class="mt-3">
                <label for="idcard-back-file" class="form-label" data-i18n="document.idCardBack">マイナンバーカード（裏面）</label>
                <div class="input-group mb-3">
                  <input type="file" class="form-control" id="idcard-back-file" accept="image/jpeg, image/png, application/pdf">
                  <button type="button" class="btn btn-outline-secondary remove-file" data-input="idcard-back-file" data-i18n="document.remove">削除</button>
                </div>
                <div id="idcard-back-preview" class="preview-container d-none mb-2">
                  <img id="idcard-back-image" src="#" alt="裏面プレビュー" class="img-thumbnail">
                </div>
                <div id="idcard-back-upload-prompt" class="upload-prompt">
                  <p data-i18n="document.uploadPrompt">クリックしてファイルを選択するか、ここにドラッグ＆ドロップしてください。</p>
                  <p class="text-muted small" data-i18n="document.fileRestriction">JPG, PNG, または PDF形式、最大5MBまで</p>
                </div>
              </div>
            </div>
            <div class="d-grid gap-2">
              <button type="submit" id="submit-document" class="btn btn-primary" data-i18n="document.submit">アップロード</button>
            </div>
  <!-- フッター -->
  <footer class="bg-dark text-white py-4 mt-5">
    <div class="container">
      <div class="row">
        <div class="col-md-6">
          <h5 data-i18n="footer.about">Local Guideについて</h5>
          <p data-i18n="footer.description">現地ガイドと観光客をつなぐプラットフォーム。特別な旅行体験を。</p>
        </div>
        <div class="col-md-3">
          <h5 data-i18n="footer.links">リンク</h5>
          <ul class="list-unstyled">
            <li><a href="#" class="text-white" data-i18n="footer.terms">利用規約</a></li>
            <li><a href="#" class="text-white" data-i18n="footer.privacy">プライバシーポリシー</a></li>
            <li><a href="#" class="text-white" data-i18n="footer.contact">お問い合わせ</a></li>
          </ul>
        </div>
        <div class="col-md-3">
          <h5 data-i18n="footer.social">ソーシャルメディア</h5>
          <ul class="list-unstyled">
            <li><a href="#" class="text-white">Twitter</a></li>
            <li><a href="#" class="text-white">Facebook</a></li>
            <li><a href="#" class="text-white">Instagram</a></li>
          </ul>
        </div>
      </div>
      <div class="row mt-3">
        <div class="col-12 text-center">
          <p class="mb-0">&copy; 2023 Local Guide. All rights reserved.</p>
        </div>
      </div>
    </div>
  </footer>

  <!-- JavaScript -->
  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-auth-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-storage-compat.js"></script>
  
  <!-- Bootstrap and Application Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="translations/ja.js"></script>
  <script src="translations/en.js"></script>
  <script src="translations/i18n.js"></script>
  <script src="firebase-client.js"></script>
  <script src="phone-auth.js"></script>
  <script src="script.js"></script>
  <script src="user-journey.js"></script>

  <script>
    // Firebase APIキーが設定されている場合、Firebase SDKを初期化
    document.addEventListener('DOMContentLoaded', function() {
      const apiKey = document.querySelector('meta[name="firebase-api-key"]').content;
      const projectId = document.querySelector('meta[name="firebase-project-id"]').content;
      const appId = document.querySelector('meta[name="firebase-app-id"]').content;
      
      // 実際のAPIキーが設定されている場合のみFirebaseを初期化
      if (apiKey && apiKey !== 'mock-api-key' && projectId && appId) {
        if (typeof window.initFirebase === 'function') {
          window.initFirebase(apiKey, projectId, appId)
            .then(success => {
              if (success) {
                console.log('Firebase initialized successfully');
              } else {
                console.error('Failed to initialize Firebase');
              }
            });
        } else {
          console.error('initFirebase function not found');
        }
      } else {
        console.log('Using mock Firebase implementation');
      }
    });
  </script>
  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.10/firebase-auth-compat.js"></script>
  
  <!-- Firebase初期化スクリプト -->
  <script>
    document.addEventListener('DOMContentLoaded', async function() {
      // 環境変数からFirebase設定を取得
      try {
        const response = await fetch('/api/firebase-config');
        if (!response.ok) {
          throw new Error('Firebase設定の取得に失敗しました');
        }
        
        const config = await response.json();
        
        // Firebase認証を初期化
        if (window.initFirebase) {
          const initialized = window.initFirebase(
            config.apiKey,
            config.projectId,
            config.appId
          );
          
          if (initialized) {
            console.log('Firebase認証が初期化されました');
          } else {
            console.error('Firebase認証の初期化に失敗しました');
          }
        }
      } catch (error) {
        console.error('Firebase設定エラー:', error);
      }
    });
  </script>
</body>
</html>
